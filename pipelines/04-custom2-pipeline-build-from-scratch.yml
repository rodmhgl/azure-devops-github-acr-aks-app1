trigger:
- master

variables:
  image_name: custom2aksnginxapp1
  image_tag: $(Build.BuildId)

stages:
- stage: Build
  displayName: Build Stage
  jobs:
    - job: Build
      displayName: Build Job
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'manual-rnaksdevopsacr-svc'
          repository: '$(image_name)'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            $(image_tag)
            $(Build.SourceVersion)
      - script: |
          sudo apt-get -y install trivy
          mkdir report
          trivy image -s HIGH,CRITICAL $(image_name):$(image_tag) | tee ./report/trivy-image-scan-report.txt
          trivy image -s HIGH,CRITICAL rnaksdevopsacr.azurecr.io/$(image_name):$(image_tag) | tee ./report/trivy-image-scan-report.txt
        displayName: "Image scan by Trivy"
        continueOnError: true

      - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)
      - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
      - task: CopyFiles@1
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          OverWrite: true
      - bash: echo After copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'kube-manifests'
          publishLocation: 'Container'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/report/trivy-image-scan-report.txt'
          ArtifactName: 'trivy-scan'
          publishLocation: 'Container'
