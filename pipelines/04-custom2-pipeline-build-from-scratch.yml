trigger:
- master

variables:
  image_name: custom2aksnginxapp1
  image_tag: $(Build.BuildId)
  clair_db: arminc/clairdb_latest
  clair_scan: arminc/clair-local-scan:v2.1.7_5125fde67edee46cb058a3feee7164af9645e07d

stages:
- stage: Build
  displayName: Build Stage
  jobs:
    - job: Build
      displayName: Build Job
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'manual-rnaksdevopsacr-svc'
          repository: '$(image_name)'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            $(image_tag)
            $(Build.SourceVersion)
      - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)
      - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
      - task: CopyFiles@1
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          OverWrite: true
      - bash: echo After copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'kube-manifests'
          publishLocation: 'Container'
    - job:
      displayName: Scan container image by ClairV2

      steps:
      - task: Docker@2
        displayName: 'Build an image'
        inputs:
          command: build
          repository: $(image_name)
          tags: $(image_tag)
          dockerFile: '**/Dockerfile'
      - script: |
          mkdir report
          docker run -d --name clair-db $(clair_db)
          docker run -p 6060:6060 --link clair-db:postgres -d --name clair $(clair_scan)
          MY_IP=$(ifconfig eth0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
          sleep 10
          CLAIR_IP=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' clair)
          clair-scanner --ip $MY_IP --clair http://$CLAIR_IP:6060 -t High --reportAll=false $(repository):$(tags) | tee ./report/clair-image-scan-report.txt
          docker stop clair
          docker rm clair
          docker stop clair-db
          docker rm clair-db
          docker image rm $(clair_db)
        displayName: "Image scan by Clair"
        continueOnError: true