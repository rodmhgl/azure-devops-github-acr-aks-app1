trigger:
- master

variables:
  image_name: 'custom2aksnginxapp1'
  rn_repo_name: 'rnaksdevopsacr.azurecr.io'
  image_tag: $(Build.BuildId)

stages:
- stage: Build
  displayName: Build Stage
  jobs:
    - job: Build
      displayName: Build Job
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: Docker@2
        displayName: "Building Container"
        inputs:
          containerRegistry: 'manual-rnaksdevopsacr-svc'
          repository: '$(image_name)'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
          tags: |
            $(image_tag)
            $(Build.SourceVersion)
      
      - task: Bash@3
        displayName: "Image scan by Trivy"
        env:
          REPO_URI: $(rn_repo_name)
        inputs:
          targetType: 'inline'
          script: |
            sudo apt-get install wget apt-transport-https gnupg lsb-release
            wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
            echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
            sudo apt-get -y update
            sudo apt-get -y install trivy
            mkdir report
            echo $REPO_URI
            echo $(image_name)
            echo $(image_tag)
            echo "$REPO_URI/$(image_name)"
            echo "trivy image -s HIGH,CRITICAL rnaksdevopsacr.azurecr.io/$(image_name):$(image_tag) | tee ./report/trivy-image-scan-report.txt"
            trivy image -s HIGH,CRITICAL rnaksdevopsacr.azurecr.io/$(image_name):$(image_tag) | tee ./report/trivy-image-scan-report.txt

      # - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)
      # - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
      - task: CopyFiles@1
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
          OverWrite: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'kube-manifests'
          publishLocation: 'Container'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(System.DefaultWorkingDirectory)/report/trivy-image-scan-report.txt'
          ArtifactName: 'trivy-scan'
          publishLocation: 'Container'
